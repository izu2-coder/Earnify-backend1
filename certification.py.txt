from flask import Blueprint, request, jsonify import qrcode import io from reportlab.pdfgen import canvas import base64 certification_bp = Blueprint('certification', __name__) user_certifications = {} def generate_certificate(user_id, course_id): buffer = io.BytesIO() c = canvas.Canvas(buffer) c.setFont("Helvetica", 12) c.drawString(50, 750, f"Certificate of Completion") c.drawString(50, 730, f"Presented to: {user_id}") c.drawString(50, 710, f"Course: {course_id.replace('-', ' ').title()}") c.drawString(50, 690, f"Date: {datetime.now().strftime('%Y-%m-%d')}") c.save() pdf_data = buffer.getvalue() # Generate QR code qr = qrcode.QRCode(version=1, box_size=4, border=4) qr.add_data(f"https://earnify.app/cert/ {user_id}/{course_id}") img = qr.make_image(fill_color="black", back_color="white") qr_buffer = io.BytesIO() img.save(qr_buffer) return { "pdf": base64.b64encode(pdf_data).decode("utf-8"), "qr_code": base64.b64encode(qr_buffer.getvalue()).decode("utf-8") } @certification_bp.route('/generate', methods=['POST']) def generate_cert(): data = request.get_json() user_id = data.get('user_id') course_id = data.get('course_id') if not user_id or not course_id: return jsonify({"error": "Missing user or course ID"}), 400 cert_data = generate_certificate(user_id, course_id) user_certifications[f"{user_id}_{course_id}"] = cert_data return jsonify({ "message": "Certificate generated successfully!", "cert_id": f"{user_id}_{course_id}" }), 200from datetime import datetime